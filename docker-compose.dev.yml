version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: myapp_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # FastAPI Backend (Development mode with hot reload)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://postgres:password@db:5432/myapp_dev
      SECRET_KEY: dev-secret-key-change-in-production
      ALLOWED_ORIGINS: http://localhost:3000,http://localhost:5173,http://localhost:4173
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      # Mount source code for hot reload
      - ./backend:/app
      - /app/__pycache__
      - backend_dev_data:/app/data
    restart: unless-stopped
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # React Frontend (Development mode)
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      # Mount source code for hot reload
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped

volumes:
  postgres_dev_data:
  backend_dev_data:

networks:
  default:
    driver: bridge
