version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: ownproject-db
    environment:
      POSTGRES_DB: ownproject
      POSTGRES_USER: ownproject
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ownproject-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ownproject"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ownproject-backend
    environment:
      DATABASE_URL: postgresql://ownproject:${DB_PASSWORD}@db:5432/ownproject
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
    ports:
      - "8001:8000"
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/data:/app/data
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ownproject-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: ownproject-nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - nginx_data:/data
      - nginx_letsencrypt:/etc/letsencrypt
    networks:
      - ownproject-network

volumes:
  postgres_data:
  nginx_data:
  nginx_letsencrypt:

networks:
  ownproject-network:
    driver: bridge