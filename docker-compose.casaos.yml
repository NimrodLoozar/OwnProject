version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: ownproject-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ownproject
      POSTGRES_USER: ownproject
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password_change_me}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ownproject-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ownproject"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API
  backend:
    image: ownproject-backend:latest
    container_name: ownproject-backend
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://ownproject:${DB_PASSWORD:-secure_password_change_me}@db:5432/ownproject
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-me}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    ports:
      - "8001:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ownproject-network
    volumes:
      - backend_uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  ownproject-network:
    driver: bridge